{
    "name": "CodeApi",
    "documentation": {
        "sections": [
            {
                "content": "Auxiliary module to provide code api documentation.\n\n\nOnce 'backend' data has been generated, customization of the output is using a layer running in the\nbrowser. For now, the customization is essentially defined using css through the  [Configuration.css](@nav/api/CodeApi.Configuration.css)  attribute.\nIts purpose is to link  [Semantic.role](@nav/api/CodeApi.Semantic.role)  attribute to display options.\n\nFor instance,\n<a target='_blank'\nhref=\"/api/assets-gateway/cdn-backend/resources/QHlvdXdvbC9ta2RvY3MtdHM=/latest/assets/ts-typedoc.css\">this</a>\n is the default css file of the  [configurationTsTypedoc](@nav/api/CodeApi.configurationTsTypedoc) .",
                "contentType": "markdown",
                "semantic": {
                    "role": "",
                    "labels": [],
                    "attributes": {},
                    "relations": {}
                }
            }
        ]
    },
    "path": "",
    "attributes": [
        {
            "name": "configurationTsTypedoc",
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "documentation": {
                "sections": [
                    {
                        "content": "Configuration for the  `TsTypedoc`  backend.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "configurationTsTypedoc",
            "code": {
                "filePath": "src/lib/code-api/configurations.ts",
                "declaration": "configurationTsTypedoc: Configuration = {\n    codeUrl: ({\n        project,\n        path,\n        startLine,\n    }: {\n        project: Project\n        path: string\n        startLine: number\n    }) => {\n        return `https://github.com/${project.name}/tree/main/src/${path}#L${startLine}`\n    },\n    externalTypes: {},\n    css: () => `${setup.name}#${setup.version}~assets/ts-typedoc.css`,\n    notebook: false,\n}",
                "implementation": "",
                "startLine": 47,
                "endLine": 48,
                "references": {
                    "configurationTsTypedoc": "@nav/api/CodeApi.configurationTsTypedoc",
                    "Configuration": "@nav/api/CodeApi.Configuration"
                }
            }
        }
    ],
    "types": [
        {
            "name": "ModuleView",
            "documentation": {
                "sections": [
                    {
                        "content": "View for a  [Module](@nav/api/CodeApi.Module) .",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "ModuleView",
            "attributes": [],
            "callables": [
                {
                    "name": "new ModuleView",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Create the VirtualDOM.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            },
                            {
                                "title": "Arguments",
                                "content": "\n*  **params**: Arguments\n*  **configuration**: Rendering configuration..\n*  **module**: Model of the module.\n*  **router**: Router of the application.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "arguments",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "ModuleView.new ModuleView",
                    "code": {
                        "filePath": "src/lib/code-api/module.view.ts",
                        "declaration": "constructor(params: {\n        module: Module\n        router: Router\n        project: Project\n        configuration: Configuration\n    })",
                        "implementation": "constructor(params: {\n        module: Module\n        router: Router\n        project: Project\n        configuration: Configuration\n    }) {\n        Object.assign(this, params)\n        this.class += ` mkapi-role-${this.module.semantic.role}`\n        const getFile = (entity: Entity) => {\n            return entity.code.filePath\n        }\n        const files = [\n            ...new Set(\n                [\n                    ...this.module.attributes,\n                    ...this.module.callables,\n                    ...this.module.types,\n                ].map(getFile),\n            ),\n        ].sort((a: string, b: string) => a.localeCompare(b))\n\n        this.children = [\n            new HeaderView({\n                tag: 'h1',\n                withClass: 'doc-module-name',\n                doc: this.module,\n            }),\n            {\n                tag: 'div',\n                children: [\n                    new DocumentationView({\n                        documentation: this.module.documentation,\n                        router: this.router,\n                        configuration: this.configuration,\n                    }),\n                ],\n            },\n            { tag: 'div', class: 'my-3' },\n            separatorView,\n            ...[...files].map((file): AnyVirtualDOM => {\n                const attributes = this.module.attributes.filter(\n                    (a) => getFile(a) === file,\n                )\n                const types = this.module.types.filter(\n                    (a) => getFile(a) === file,\n                )\n                const callables = this.module.callables.filter(\n                    (a) => getFile(a) === file,\n                )\n                const fileDoc = this.module.files.find((f) => {\n                    return f.path === file\n                })\n                return {\n                    tag: 'div' as const,\n                    children: [\n                        { tag: 'div', class: 'my-5' },\n                        new HeaderView({\n                            tag: 'h2',\n                            withClass: 'doc-file-name fas fa-file',\n                            doc: {\n                                name: file.split('/').slice(-1)[0],\n                                semantic: undefined,\n                                path: file.split('/').slice(-1)[0],\n                            },\n                        }),\n                        new DocumentationView({\n                            documentation: fileDoc.documentation,\n                            router: this.router,\n                            configuration: this.configuration,\n                        }),\n                        {\n                            tag: 'div',\n                            children: attributes\n                                .map((attribute) => [\n                                    new AttributeView({\n                                        fromModule: this.module,\n                                        attribute,\n                                        router: this.router,\n                                        configuration: this.configuration,\n                                        project: this.project,\n                                    }),\n                                    ySeparatorView5,\n                                ])\n                                .flat(),\n                        },\n                        {\n                            tag: 'div',\n                            children: callables\n                                .map((callable) => [\n                                    new CallableView({\n                                        callable,\n                                        router: this.router,\n                                        configuration: this.configuration,\n                                        project: this.project,\n                                    }),\n                                    ySeparatorView5,\n                                ])\n                                .flat(),\n                        },\n                        {\n                            tag: 'div',\n                            children: types\n                                .map((type) => [\n                                    new TypeView({\n                                        fromModule: this.module,\n                                        type,\n                                        router: this.router,\n                                        configuration: this.configuration,\n                                        project: this.project,\n                                    }),\n                                    ySeparatorView5,\n                                ])\n                                .flat(),\n                        },\n                    ],\n                }\n            }),\n        ]\n    }",
                        "startLine": 32,
                        "endLine": 151,
                        "references": {
                            "new ModuleView": "@nav/api/CodeApi.ModuleView.constructor",
                            "Configuration": "@nav/api/CodeApi.Configuration",
                            "Module": "@nav/api/CodeApi.Module",
                            "Project": "@nav/api/CodeApi.Project",
                            "Router": "@nav/api/MainModule.Router",
                            "ModuleView": "@nav/api/CodeApi.ModuleView"
                        }
                    },
                    "semantic": {
                        "role": "constructor",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    }
                }
            ],
            "code": {
                "filePath": "src/lib/code-api/module.view.ts",
                "declaration": "export class ModuleView implements VirtualDOM<'div'>",
                "implementation": "export class ModuleView implements VirtualDOM<'div'> {\n    public readonly module: Module\n    public readonly router: Router\n    public readonly configuration: Configuration\n    public readonly project: Project\n    public readonly tag = 'div'\n    public readonly class = 'mkapi-module'\n    public readonly children: ChildrenLike\n\n    /**\n     * Create the VirtualDOM.\n     *\n     * @param params Arguments\n     * @param params.module Model of the module.\n     * @param params.router Router of the application.\n     * @param params.configuration Rendering configuration..\n     */\n    constructor(params: {\n        module: Module\n        router: Router\n        project: Project\n        configuration: Configuration\n    }) {\n        Object.assign(this, params)\n        this.class += ` mkapi-role-${this.module.semantic.role}`\n        const getFile = (entity: Entity) => {\n            return entity.code.filePath\n        }\n        const files = [\n            ...new Set(\n                [\n                    ...this.module.attributes,\n                    ...this.module.callables,\n                    ...this.module.types,\n                ].map(getFile),\n            ),\n        ].sort((a: string, b: string) => a.localeCompare(b))\n\n        this.children = [\n            new HeaderView({\n                tag: 'h1',\n                withClass: 'doc-module-name',\n                doc: this.module,\n            }),\n            {\n                tag: 'div',\n                children: [\n                    new DocumentationView({\n                        documentation: this.module.documentation,\n                        router: this.router,\n                        configuration: this.configuration,\n                    }),\n                ],\n            },\n            { tag: 'div', class: 'my-3' },\n            separatorView,\n            ...[...files].map((file): AnyVirtualDOM => {\n                const attributes = this.module.attributes.filter(\n                    (a) => getFile(a) === file,\n                )\n                const types = this.module.types.filter(\n                    (a) => getFile(a) === file,\n                )\n                const callables = this.module.callables.filter(\n                    (a) => getFile(a) === file,\n                )\n                const fileDoc = this.module.files.find((f) => {\n                    return f.path === file\n                })\n                return {\n                    tag: 'div' as const,\n                    children: [\n                        { tag: 'div', class: 'my-5' },\n                        new HeaderView({\n                            tag: 'h2',\n                            withClass: 'doc-file-name fas fa-file',\n                            doc: {\n                                name: file.split('/').slice(-1)[0],\n                                semantic: undefined,\n                                path: file.split('/').slice(-1)[0],\n                            },\n                        }),\n                        new DocumentationView({\n                            documentation: fileDoc.documentation,\n                            router: this.router,\n                            configuration: this.configuration,\n                        }),\n                        {\n                            tag: 'div',\n                            children: attributes\n                                .map((attribute) => [\n                                    new AttributeView({\n                                        fromModule: this.module,\n                                        attribute,\n                                        router: this.router,\n                                        configuration: this.configuration,\n                                        project: this.project,\n                                    }),\n                                    ySeparatorView5,\n                                ])\n                                .flat(),\n                        },\n                        {\n                            tag: 'div',\n                            children: callables\n                                .map((callable) => [\n                                    new CallableView({\n                                        callable,\n                                        router: this.router,\n                                        configuration: this.configuration,\n                                        project: this.project,\n                                    }),\n                                    ySeparatorView5,\n                                ])\n                                .flat(),\n                        },\n                        {\n                            tag: 'div',\n                            children: types\n                                .map((type) => [\n                                    new TypeView({\n                                        fromModule: this.module,\n                                        type,\n                                        router: this.router,\n                                        configuration: this.configuration,\n                                        project: this.project,\n                                    }),\n                                    ySeparatorView5,\n                                ])\n                                .flat(),\n                        },\n                    ],\n                }\n            }),\n        ]\n    }\n}",
                "startLine": 15,
                "endLine": 152,
                "references": {
                    "ModuleView": "@nav/api/CodeApi.ModuleView",
                    "Configuration": "@nav/api/CodeApi.Configuration",
                    "Module": "@nav/api/CodeApi.Module",
                    "Project": "@nav/api/CodeApi.Project",
                    "Router": "@nav/api/MainModule.Router",
                    "VirtualDOM.children": "-1",
                    "VirtualDOM.class": "-1",
                    "VirtualDOM.tag": "-1"
                }
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "ChildModule",
            "documentation": {
                "sections": [
                    {
                        "content": "Child module representation.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "ChildModule",
            "attributes": [
                {
                    "name": "isLeaf",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Whether it includes children modules.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "ChildModule.isLeaf",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "isLeaf: boolean",
                        "implementation": "",
                        "startLine": 183,
                        "endLine": 184,
                        "references": {
                            "isLeaf": "@nav/api/CodeApi.ChildModule.isLeaf"
                        }
                    }
                },
                {
                    "name": "name",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "ChildModule.name",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "name: string",
                        "implementation": "",
                        "startLine": 175,
                        "endLine": 176,
                        "references": {
                            "name": "@nav/api/CodeApi.ChildModule.name"
                        }
                    }
                },
                {
                    "name": "path",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Path (*e.g.*  `ModuleFoo.ModuleBar` ).",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "ChildModule.path",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "path: EntityPath",
                        "implementation": "",
                        "startLine": 179,
                        "endLine": 180,
                        "references": {
                            "path": "@nav/api/CodeApi.ChildModule.path"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface ChildModule",
                "implementation": "export interface ChildModule {\n    /**\n     * Name.\n     */\n    name: string\n    /**\n     * Path (*e.g.* `ModuleFoo.ModuleBar`).\n     */\n    path: EntityPath\n    /**\n     * Whether it includes children modules.\n     */\n    isLeaf: boolean\n}",
                "startLine": 171,
                "endLine": 185,
                "references": {
                    "ChildModule": "@nav/api/CodeApi.ChildModule"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Code",
            "documentation": {
                "sections": [
                    {
                        "content": "Entity code's description.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Code",
            "attributes": [
                {
                    "name": "declaration",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Entity's declaration.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Code.declaration",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "declaration: string",
                        "implementation": "",
                        "startLine": 53,
                        "endLine": 54,
                        "references": {
                            "declaration": "@nav/api/CodeApi.Code.declaration"
                        }
                    }
                },
                {
                    "name": "endLine",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Ending line of the declaration.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Code.endLine",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "endLine: number",
                        "implementation": "",
                        "startLine": 69,
                        "endLine": 70,
                        "references": {
                            "endLine": "@nav/api/CodeApi.Code.endLine"
                        }
                    }
                },
                {
                    "name": "filePath",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "File path in which the declaration is included.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Code.filePath",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "filePath: string",
                        "implementation": "",
                        "startLine": 61,
                        "endLine": 62,
                        "references": {
                            "filePath": "@nav/api/CodeApi.Code.filePath"
                        }
                    }
                },
                {
                    "name": "implementation",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Optional associated implementation.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Code.implementation",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "implementation?: string",
                        "implementation": "",
                        "startLine": 57,
                        "endLine": 58,
                        "references": {
                            "implementation": "@nav/api/CodeApi.Code.implementation"
                        }
                    }
                },
                {
                    "name": "references",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "References to other entities in the declaration.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Code.references",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "references: { [name: string]: EntityPath }",
                        "implementation": "",
                        "startLine": 74,
                        "endLine": 75,
                        "references": {
                            "references": "@nav/api/CodeApi.Code.references",
                            "EntityPath": "@nav/api/CodeApi.EntityPath"
                        }
                    }
                },
                {
                    "name": "startLine",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Starting line of the declaration.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Code.startLine",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "startLine: number",
                        "implementation": "",
                        "startLine": 65,
                        "endLine": 66,
                        "references": {
                            "startLine": "@nav/api/CodeApi.Code.startLine"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface Code",
                "implementation": "export interface Code {\n    /**\n     * Entity's declaration.\n     */\n    declaration: string\n    /**\n     * Optional associated implementation.\n     */\n    implementation?: string\n    /**\n     * File path in which the declaration is included.\n     */\n    filePath: string\n    /**\n     * Starting line of the declaration.\n     */\n    startLine: number\n    /**\n     * Ending line of the declaration.\n     */\n    endLine: number\n\n    /**\n     * References to other entities in the declaration.\n     */\n    references: { [name: string]: EntityPath }\n}",
                "startLine": 49,
                "endLine": 76,
                "references": {
                    "Code": "@nav/api/CodeApi.Code",
                    "EntityPath": "@nav/api/CodeApi.EntityPath"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Configuration",
            "documentation": {
                "sections": [
                    {
                        "content": "Specification of the configuration interface.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Configuration",
            "attributes": [
                {
                    "name": "codeUrl",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Define the code url from repo for a file in the project (located at  `path` ) and a starting line ( `startLine` ).",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Configuration.codeUrl",
                    "code": {
                        "filePath": "src/lib/code-api/configurations.ts",
                        "declaration": "codeUrl: ({\n        project,\n        path,\n        startLine,\n    }: {\n        project: Project\n        path: string\n        startLine: number\n    }) => string",
                        "implementation": "",
                        "startLine": 28,
                        "endLine": 29,
                        "references": {
                            "codeUrl": "@nav/api/CodeApi.Configuration.codeUrl",
                            "Project": "@nav/api/CodeApi.Project"
                        }
                    }
                },
                {
                    "name": "css",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Defines the stylesheet to install.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Configuration.css",
                    "code": {
                        "filePath": "src/lib/code-api/configurations.ts",
                        "declaration": "css: (project: Project) => string",
                        "implementation": "",
                        "startLine": 20,
                        "endLine": 21,
                        "references": {
                            "css": "@nav/api/CodeApi.Configuration.css",
                            "Project": "@nav/api/CodeApi.Project"
                        }
                    }
                },
                {
                    "name": "externalTypes",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "External types to link in the documentation, where keys are symbol path and values associated URL.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Configuration.externalTypes",
                    "code": {
                        "filePath": "src/lib/code-api/configurations.ts",
                        "declaration": "externalTypes: { [k: string]: string }",
                        "implementation": "",
                        "startLine": 24,
                        "endLine": 25,
                        "references": {
                            "externalTypes": "@nav/api/CodeApi.Configuration.externalTypes"
                        }
                    }
                },
                {
                    "name": "notebook",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "If  `true` , use the  [Notebook](@nav/api/Notebook)  module to parse the code documentation included in the API files.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Configuration.notebook",
                    "code": {
                        "filePath": "src/lib/code-api/configurations.ts",
                        "declaration": "notebook?: boolean",
                        "implementation": "",
                        "startLine": 41,
                        "endLine": 42,
                        "references": {
                            "notebook": "@nav/api/CodeApi.Configuration.notebook"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/configurations.ts",
                "declaration": "export interface Configuration",
                "implementation": "export interface Configuration {\n    /**\n     * Defines the stylesheet to install.\n     *\n     * @param project\n     * @returns Stylesheet full URL.\n     */\n    css: (project: Project) => string\n    /**\n     * External types to link in the documentation, where keys are symbol path and values associated URL.\n     */\n    externalTypes: { [k: string]: string }\n    /**\n     * Define the code url from repo for a file in the project (located at `path`) and a starting line (`startLine`).\n     */\n    codeUrl: ({\n        project,\n        path,\n        startLine,\n    }: {\n        project: Project\n        path: string\n        startLine: number\n    }) => string\n\n    /**\n     * If `true`, use the {@link Notebook} module to parse the code documentation included in the API files.\n     */\n    notebook?: boolean\n}",
                "startLine": 13,
                "endLine": 43,
                "references": {
                    "Configuration": "@nav/api/CodeApi.Configuration",
                    "Project": "@nav/api/CodeApi.Project"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Documentation",
            "documentation": {
                "sections": [
                    {
                        "content": "An entity documentation.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Documentation",
            "attributes": [
                {
                    "name": "sections",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "List of the sections.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Documentation.sections",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "sections: DocumentationSection[]",
                        "implementation": "",
                        "startLine": 43,
                        "endLine": 44,
                        "references": {
                            "sections": "@nav/api/CodeApi.Documentation.sections",
                            "DocumentationSection": "@nav/api/CodeApi.DocumentationSection"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface Documentation",
                "implementation": "export interface Documentation {\n    /**\n     * List of the sections.\n     */\n    sections: DocumentationSection[]\n}",
                "startLine": 39,
                "endLine": 45,
                "references": {
                    "Documentation": "@nav/api/CodeApi.Documentation",
                    "DocumentationSection": "@nav/api/CodeApi.DocumentationSection"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "DocumentationSection",
            "documentation": {
                "sections": [
                    {
                        "content": "Documentation section.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "DocumentationSection",
            "attributes": [
                {
                    "name": "content",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Section's content.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "DocumentationSection.content",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "content: string",
                        "implementation": "",
                        "startLine": 29,
                        "endLine": 30,
                        "references": {
                            "content": "@nav/api/CodeApi.DocumentationSection.content"
                        }
                    }
                },
                {
                    "name": "contentType",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Content's type.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "DocumentationSection.contentType",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "contentType: string",
                        "implementation": "",
                        "startLine": 33,
                        "endLine": 34,
                        "references": {
                            "contentType": "@nav/api/CodeApi.DocumentationSection.contentType"
                        }
                    }
                },
                {
                    "name": "semantic",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Associated semantic.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "DocumentationSection.semantic",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "semantic: Semantic",
                        "implementation": "",
                        "startLine": 25,
                        "endLine": 26,
                        "references": {
                            "semantic": "@nav/api/CodeApi.DocumentationSection.semantic",
                            "Semantic": "@nav/api/CodeApi.Semantic"
                        }
                    }
                },
                {
                    "name": "title",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Section's title.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "DocumentationSection.title",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "title?: string",
                        "implementation": "",
                        "startLine": 21,
                        "endLine": 22,
                        "references": {
                            "title": "@nav/api/CodeApi.DocumentationSection.title"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface DocumentationSection",
                "implementation": "export interface DocumentationSection {\n    /**\n     * Section's title.\n     */\n    title?: string\n    /**\n     * Associated semantic.\n     */\n    semantic: Semantic\n    /**\n     * Section's content.\n     */\n    content: string\n    /**\n     * Content's type.\n     */\n    contentType: string\n}",
                "startLine": 17,
                "endLine": 35,
                "references": {
                    "DocumentationSection": "@nav/api/CodeApi.DocumentationSection",
                    "Semantic": "@nav/api/CodeApi.Semantic"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Entity",
            "documentation": {
                "sections": [
                    {
                        "content": "Base structure to represent an entity within the code, e.g. class, structure, function, variable,\n*etc.*.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Entity",
            "attributes": [
                {
                    "name": "code",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Code information.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.code",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "code: Code",
                        "implementation": "",
                        "startLine": 116,
                        "endLine": 117,
                        "references": {
                            "code": "@nav/api/CodeApi.Entity.code",
                            "Code": "@nav/api/CodeApi.Code"
                        }
                    }
                },
                {
                    "name": "documentation",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Documentation.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.documentation",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "documentation: Documentation",
                        "implementation": "",
                        "startLine": 112,
                        "endLine": 113,
                        "references": {
                            "documentation": "@nav/api/CodeApi.Entity.documentation",
                            "Documentation": "@nav/api/CodeApi.Documentation"
                        }
                    }
                },
                {
                    "name": "name",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.name",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "name: string",
                        "implementation": "",
                        "startLine": 108,
                        "endLine": 109,
                        "references": {
                            "name": "@nav/api/CodeApi.Entity.name"
                        }
                    }
                },
                {
                    "name": "path",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "The path (e.g.  `ModuleFoo.TypeBar.attrBaz` )",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.path",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "path: EntityPath",
                        "implementation": "",
                        "startLine": 124,
                        "endLine": 125,
                        "references": {
                            "path": "@nav/api/CodeApi.Entity.path"
                        }
                    }
                },
                {
                    "name": "semantic",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Semantic associated.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.semantic",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "semantic: Semantic",
                        "implementation": "",
                        "startLine": 120,
                        "endLine": 121,
                        "references": {
                            "semantic": "@nav/api/CodeApi.Entity.semantic",
                            "Semantic": "@nav/api/CodeApi.Semantic"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface Entity",
                "implementation": "export interface Entity {\n    /**\n     * Name.\n     */\n    name: string\n    /**\n     * Documentation.\n     */\n    documentation: Documentation\n    /**\n     * Code information.\n     */\n    code: Code\n    /**\n     * Semantic associated.\n     */\n    semantic: Semantic\n    /**\n     * The path (e.g. `ModuleFoo.TypeBar.attrBaz`)\n     */\n    path: EntityPath\n}",
                "startLine": 104,
                "endLine": 126,
                "references": {
                    "Entity": "@nav/api/CodeApi.Entity",
                    "Code": "@nav/api/CodeApi.Code",
                    "Documentation": "@nav/api/CodeApi.Documentation",
                    "Semantic": "@nav/api/CodeApi.Semantic",
                    "Type": "@nav/api/CodeApi.Type"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "File",
            "documentation": {
                "sections": [
                    {
                        "content": "File representation.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "File",
            "attributes": [
                {
                    "name": "documentation",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Documentation.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "File.documentation",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "documentation: Documentation",
                        "implementation": "",
                        "startLine": 165,
                        "endLine": 166,
                        "references": {
                            "documentation": "@nav/api/CodeApi.File.documentation",
                            "Documentation": "@nav/api/CodeApi.Documentation"
                        }
                    }
                },
                {
                    "name": "name",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "File.name",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "name: string",
                        "implementation": "",
                        "startLine": 157,
                        "endLine": 158,
                        "references": {
                            "name": "@nav/api/CodeApi.File.name"
                        }
                    }
                },
                {
                    "name": "path",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Path.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "File.path",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "path: string",
                        "implementation": "",
                        "startLine": 161,
                        "endLine": 162,
                        "references": {
                            "path": "@nav/api/CodeApi.File.path"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface File",
                "implementation": "export interface File {\n    /**\n     * Name.\n     */\n    name: string\n    /**\n     * Path.\n     */\n    path: string\n    /**\n     * Documentation.\n     */\n    documentation: Documentation\n}",
                "startLine": 153,
                "endLine": 167,
                "references": {
                    "File": "@nav/api/CodeApi.File",
                    "Documentation": "@nav/api/CodeApi.Documentation"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Semantic",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic representation.\n\nThey represent metadata transmitted to the frontend renderer to display appropriately the elements.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Semantic",
            "attributes": [
                {
                    "name": "attributes",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Some attributes.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Semantic.attributes",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "attributes: { [k: string]: string }",
                        "implementation": "",
                        "startLine": 94,
                        "endLine": 95,
                        "references": {
                            "attributes": "@nav/api/CodeApi.Semantic.attributes"
                        }
                    }
                },
                {
                    "name": "labels",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Some labels.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Semantic.labels",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "labels: string[]",
                        "implementation": "",
                        "startLine": 90,
                        "endLine": 91,
                        "references": {
                            "labels": "@nav/api/CodeApi.Semantic.labels"
                        }
                    }
                },
                {
                    "name": "relations",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Some relation with other entities (grouped by a category keyword, *e.g.*  `InheritedBy` ).",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Semantic.relations",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "relations: { [category: string]: EntityPath[] }",
                        "implementation": "",
                        "startLine": 98,
                        "endLine": 99,
                        "references": {
                            "relations": "@nav/api/CodeApi.Semantic.relations",
                            "EntityPath": "@nav/api/CodeApi.EntityPath"
                        }
                    }
                },
                {
                    "name": "role",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Role, a unique meaning (*e.g.*  `Class` ,  `Interface` ,  `TypeAlias` , *etc.*).",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Semantic.role",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "role: string",
                        "implementation": "",
                        "startLine": 86,
                        "endLine": 87,
                        "references": {
                            "role": "@nav/api/CodeApi.Semantic.role"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface Semantic",
                "implementation": "export interface Semantic {\n    /**\n     * Role, a unique meaning (*e.g.* `Class`, `Interface`, `TypeAlias`, *etc.*).\n     */\n    role: string\n    /**\n     * Some labels.\n     */\n    labels: string[]\n    /**\n     * Some attributes.\n     */\n    attributes: { [k: string]: string }\n    /**\n     * Some relation with other entities (grouped by a category keyword, *e.g.* `InheritedBy`).\n     */\n    relations: { [category: string]: EntityPath[] }\n}",
                "startLine": 82,
                "endLine": 100,
                "references": {
                    "Semantic": "@nav/api/CodeApi.Semantic",
                    "EntityPath": "@nav/api/CodeApi.EntityPath"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Type",
            "documentation": {
                "sections": [
                    {
                        "content": "Type representation.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Type",
            "attributes": [
                {
                    "name": "attributes",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "List of owned attributes.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Type.attributes",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "attributes: Attribute[]",
                        "implementation": "",
                        "startLine": 147,
                        "endLine": 148,
                        "references": {
                            "attributes": "@nav/api/CodeApi.Type.attributes",
                            "Entity": "@nav/api/CodeApi.Entity"
                        }
                    }
                },
                {
                    "name": "callables",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "List of owned callable.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Type.callables",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "callables: Callable[]",
                        "implementation": "",
                        "startLine": 143,
                        "endLine": 144,
                        "references": {
                            "callables": "@nav/api/CodeApi.Type.callables",
                            "Entity": "@nav/api/CodeApi.Entity"
                        }
                    }
                },
                {
                    "name": "code",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Code information.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.code",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "code: Code",
                        "implementation": "",
                        "startLine": 116,
                        "endLine": 117,
                        "references": {
                            "code": "@nav/api/CodeApi.Entity.code",
                            "Code": "@nav/api/CodeApi.Code"
                        }
                    }
                },
                {
                    "name": "documentation",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Documentation.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.documentation",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "documentation: Documentation",
                        "implementation": "",
                        "startLine": 112,
                        "endLine": 113,
                        "references": {
                            "documentation": "@nav/api/CodeApi.Entity.documentation",
                            "Documentation": "@nav/api/CodeApi.Documentation"
                        }
                    }
                },
                {
                    "name": "name",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.name",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "name: string",
                        "implementation": "",
                        "startLine": 108,
                        "endLine": 109,
                        "references": {
                            "name": "@nav/api/CodeApi.Entity.name"
                        }
                    }
                },
                {
                    "name": "path",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "The path (e.g.  `ModuleFoo.TypeBar.attrBaz` )",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.path",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "path: EntityPath",
                        "implementation": "",
                        "startLine": 124,
                        "endLine": 125,
                        "references": {
                            "path": "@nav/api/CodeApi.Entity.path"
                        }
                    }
                },
                {
                    "name": "semantic",
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "documentation": {
                        "sections": [
                            {
                                "content": "Semantic associated.",
                                "contentType": "markdown",
                                "semantic": {
                                    "role": "",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                }
                            }
                        ]
                    },
                    "path": "Entity.semantic",
                    "code": {
                        "filePath": "src/lib/code-api/models.ts",
                        "declaration": "semantic: Semantic",
                        "implementation": "",
                        "startLine": 120,
                        "endLine": 121,
                        "references": {
                            "semantic": "@nav/api/CodeApi.Entity.semantic",
                            "Semantic": "@nav/api/CodeApi.Semantic"
                        }
                    }
                }
            ],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export interface Type extends Entity",
                "implementation": "export interface Type extends Entity {\n    /**\n     * List of owned callable.\n     */\n    callables: Callable[]\n    /**\n     * List of owned attributes.\n     */\n    attributes: Attribute[]\n}",
                "startLine": 139,
                "endLine": 149,
                "references": {
                    "Type": "@nav/api/CodeApi.Type",
                    "Entity": "@nav/api/CodeApi.Entity",
                    "Code": "@nav/api/CodeApi.Code",
                    "Entity.code": "@nav/api/CodeApi.Entity.code",
                    "Documentation": "@nav/api/CodeApi.Documentation",
                    "Entity.documentation": "@nav/api/CodeApi.Entity.documentation",
                    "Entity.name": "@nav/api/CodeApi.Entity.name",
                    "Entity.path": "@nav/api/CodeApi.Entity.path",
                    "Semantic": "@nav/api/CodeApi.Semantic",
                    "Entity.semantic": "@nav/api/CodeApi.Entity.semantic"
                }
            },
            "semantic": {
                "role": "interface",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Attribute",
            "documentation": {
                "sections": [
                    {
                        "content": "Attribute representation.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Attribute",
            "attributes": [],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export type Attribute = Entity",
                "implementation": "",
                "startLine": 134,
                "endLine": 135,
                "references": {
                    "Attribute": "@nav/api/CodeApi.Attribute",
                    "Entity": "@nav/api/CodeApi.Entity"
                }
            },
            "semantic": {
                "role": "type-alias",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Callable",
            "documentation": {
                "sections": [
                    {
                        "content": "Callable representation.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Callable",
            "attributes": [],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export type Callable = Entity",
                "implementation": "",
                "startLine": 129,
                "endLine": 130,
                "references": {
                    "Callable": "@nav/api/CodeApi.Callable",
                    "Entity": "@nav/api/CodeApi.Entity"
                }
            },
            "semantic": {
                "role": "type-alias",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "EntityPath",
            "documentation": {
                "sections": [
                    {
                        "content": "EntityPath defines ownership between symbols (separated by a dot) and referenced from the actual owning module.\n\n*E.g*, for a particular module the attribute ̀foo ` of class ` Bar ` is ` Foo.bar`.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "EntityPath",
            "attributes": [],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export type EntityPath = string",
                "implementation": "",
                "startLine": 12,
                "endLine": 13,
                "references": {
                    "EntityPath": "@nav/api/CodeApi.EntityPath"
                }
            },
            "semantic": {
                "role": "type-alias",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Module",
            "documentation": {
                "sections": [
                    {
                        "content": "Module representation.",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Module",
            "attributes": [],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export type Module = Omit<Entity, 'code'> & {\n    /**\n     * Children modules.\n     */\n    children: ChildModule[]\n    /**\n     * Callable components.\n     */\n    callables: Callable[]\n    /**\n     * Types components.\n     */\n    types: Type[]\n    /**\n     * Attributes components.\n     */\n    attributes: Attribute[]\n    /**\n     * Files components.\n     */\n    files: File[]\n}",
                "implementation": "",
                "startLine": 189,
                "endLine": 190,
                "references": {
                    "Module": "@nav/api/CodeApi.Module",
                    "Entity": "@nav/api/CodeApi.Entity",
                    "Attribute": "@nav/api/CodeApi.Attribute",
                    "Callable": "@nav/api/CodeApi.Callable",
                    "ChildModule": "@nav/api/CodeApi.ChildModule",
                    "File": "@nav/api/CodeApi.File",
                    "Type": "@nav/api/CodeApi.Type"
                }
            },
            "semantic": {
                "role": "type-alias",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        },
        {
            "name": "Project",
            "documentation": {
                "sections": [
                    {
                        "content": "Representation of the project to document",
                        "contentType": "markdown",
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        }
                    }
                ]
            },
            "path": "Project",
            "attributes": [],
            "callables": [],
            "code": {
                "filePath": "src/lib/code-api/models.ts",
                "declaration": "export type Project = {\n    /**\n     * Its name.\n     */\n    name: string\n    /**\n     * The base path of the corresponding node in the documentation.\n     */\n    docBasePath: string\n}",
                "implementation": "",
                "startLine": 215,
                "endLine": 216,
                "references": {
                    "Project": "@nav/api/CodeApi.Project"
                }
            },
            "semantic": {
                "role": "type-alias",
                "labels": [],
                "attributes": {},
                "relations": {}
            }
        }
    ],
    "callables": [],
    "files": [
        {
            "name": "attribute.view.ts",
            "path": "src/lib/code-api/attribute.view.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "code.view.ts",
            "path": "src/lib/code-api/code.view.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "documentation.view.ts",
            "path": "src/lib/code-api/documentation.view.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "module.view.ts",
            "path": "src/lib/code-api/module.view.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "type.view.ts",
            "path": "src/lib/code-api/type.view.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "models.ts",
            "path": "src/lib/code-api/models.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "This file gathers the models definition describing an API.\n\nThis is the role of backend API generators to construct them and store them appropriately.EntityPath defines ownership between symbols (separated by a dot) and referenced from the actual owning module.\n\n*E.g*, for a particular module the attribute ̀foo` of class `Bar` is `Foo.bar`.",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "configurations.ts",
            "path": "src/lib/code-api/configurations.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "This file gathers configuration related implementations.\nIn particular, it defines the  interface and provide a default configuration for ts-typedoc\nproject.",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "utils.ts",
            "path": "src/lib/code-api/utils.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "",
                        "contentType": "markdown"
                    }
                ]
            }
        },
        {
            "name": "index.ts",
            "path": "src/lib/code-api/index.ts",
            "documentation": {
                "sections": [
                    {
                        "semantic": {
                            "role": "",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "content": "Auxiliary module to provide code api documentation.\n\n\nOnce 'backend' data has been generated, customization of the output is using a layer running in the\nbrowser. For now, the customization is essentially defined using css through the  attribute.\nIts purpose is to link  attribute to display options.\n\nFor instance,\n<a target='_blank'\nhref=\"/api/assets-gateway/cdn-backend/resources/QHlvdXdvbC9ta2RvY3MtdHM=/latest/assets/ts-typedoc.css\">this</a>\n is the default css file of the .",
                        "contentType": "markdown"
                    }
                ]
            }
        }
    ],
    "children": [],
    "semantic": {
        "role": "",
        "labels": [],
        "attributes": {},
        "relations": {}
    }
}
