{
    "name": "mkdocs_py_griffe",
    "documentation": {
        "sections": [
            {
                "content": "Backend for generating API data for python projects using the Python module\n<a href=\"https://mkdocstrings.github.io/griffe/\" target=\"_blank\">griffe</a> as the primary AST generator.\n\nThe entry point is the function [generate_api](@nav/api/Backends/mkdocs_py_griffe.py_griffe.generate_api), providing appropriate [Configuration](@nav/api/Backends/mkdocs_py_griffe.py_griffe.Configuration).\n\n## Supported style\n\nWe encourage to use Google-style synthax for docstrings, as documented\n<a href=\"https://mkdocstrings.github.io/griffe/docstrings/#google-style\" target=\"_blank\">here</a>.\n\nRegarding symbols cross-linking, the sphinx syntax is supported, see [SUPPORTED_CROSS_LINK_TAGS](@nav/api/Backends/mkdocs_py_griffe.py_griffe.SUPPORTED_CROSS_LINK_TAGS).",
                "contentType": "Markdown",
                "semantic": {
                    "role": "text",
                    "labels": [],
                    "attributes": {},
                    "relations": {}
                },
                "title": null
            }
        ]
    },
    "semantic": {
        "role": "module",
        "labels": [],
        "attributes": {},
        "relations": {}
    },
    "path": "mkdocs_py_griffe",
    "children": [],
    "callables": [
        {
            "name": "parse_module",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms module documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's module documentation.\n*  **path**: The path of the module relative to the root (e.g. `Foo.Bar.Baz`).\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_module(ast: AstModule, path: str, project: Project) -> Module",
                "filePath": "py_griffe.py",
                "startLine": 228,
                "endLine": 271,
                "references": {
                    "Module": "@nav/api/Backends/mkdocs_py_griffe.models.Module",
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                    "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                    "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                    "ChildModule": "@nav/api/Backends/mkdocs_py_griffe.models.ChildModule",
                    "Callable": "@nav/api/Backends/mkdocs_py_griffe.models.Callable",
                    "Type": "@nav/api/Backends/mkdocs_py_griffe.models.Type",
                    "Attribute": "@nav/api/Backends/mkdocs_py_griffe.models.Attribute",
                    "File": "@nav/api/Backends/mkdocs_py_griffe.models.File",
                    "AstModule": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Module",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_module": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_module"
                },
                "implementation": "def parse_module(ast: AstModule, path: str, project: Project) -> Module:\n    \"\"\"\n    Transforms module documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's module documentation.\n        path: The path of the module relative to the root (e.g. `Foo.Bar.Baz`).\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n    elements = extract_module(ast=ast)\n    children_modules = [\n        parse_child_module(ast=m, project=project) for m in elements.modules\n    ]\n    classes = [\n        parse_class(ast=c, project=project) for c in elements.classes if c.has_docstring\n    ]\n    functions = [\n        parse_function(ast=f, semantic=FUNCTION_GLOBAL_SEMANTIC, project=project)\n        for f in elements.functions\n        if f.has_docstring\n    ]\n    attributes = [\n        parse_attribute(ast=a, semantic=GLOBAL_SEMANTIC, project=project)\n        for a in elements.attributes\n    ]\n    files = [format_file_doc(ast=f, project=project) for f in elements.files]\n    sections = get_docstring_sections(ast)\n\n    return Module(\n        name=ast.name,\n        documentation=format_detailed_docstring(\n            sections=sections, parent=ast, project=project\n        ),\n        semantic=MODULE_SEMANTIC,\n        path=path,\n        children=children_modules,\n        attributes=sorted(attributes, key=lambda m: m.name),\n        types=classes,\n        callables=functions,\n        files=files,\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_module"
        },
        {
            "name": "parse_child_module",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms sub-module documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's module documentation.\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_child_module(ast: AstModule, project: Project) -> ChildModule",
                "filePath": "py_griffe.py",
                "startLine": 284,
                "endLine": 299,
                "references": {
                    "ChildModule": "@nav/api/Backends/mkdocs_py_griffe.models.ChildModule",
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                    "bool": "https://docs.python.org/fr/3/library/stdtypes.html#boolean-type-bool",
                    "AstModule": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Module",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_child_module": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_child_module"
                },
                "implementation": "def parse_child_module(ast: AstModule, project: Project) -> ChildModule:\n    \"\"\"\n    Transforms sub-module documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's module documentation.\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n    return ChildModule(\n        name=ast.name,\n        path=ast.canonical_path,\n        isLeaf=is_leaf_module(path=ast.canonical_path, project=project),\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_child_module"
        },
        {
            "name": "format_file_doc",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms a file documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's module documentation.\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def format_file_doc(ast: AstModule, project: Project) -> File",
                "filePath": "py_griffe.py",
                "startLine": 302,
                "endLine": 319,
                "references": {
                    "File": "@nav/api/Backends/mkdocs_py_griffe.models.File",
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                    "AstModule": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Module",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "format_file_doc": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.format_file_doc"
                },
                "implementation": "def format_file_doc(ast: AstModule, project: Project) -> File:\n    \"\"\"\n    Transforms a file documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's module documentation.\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n    return File(\n        name=ast.name,\n        path=str(ast.filepath.relative_to(project.root_ast.filepath.parent)),\n        documentation=format_detailed_docstring(\n            get_docstring_sections(ast), parent=ast, project=project\n        ),\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.format_file_doc"
        },
        {
            "name": "parse_function",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms a function documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's function documentation.\n*  **semantic**: Target semantic\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_function(ast: AstFunction, semantic: Semantic, project: Project) -> Callable",
                "filePath": "py_griffe.py",
                "startLine": 322,
                "endLine": 353,
                "references": {
                    "Callable": "@nav/api/Backends/mkdocs_py_griffe.models.Callable",
                    "Entity": "@nav/api/Backends/mkdocs_py_griffe.models.Entity",
                    "AstFunction": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Function",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_function": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_function"
                },
                "implementation": "def parse_function(ast: AstFunction, semantic: Semantic, project: Project) -> Callable:\n    \"\"\"\n    Transforms a function documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's function documentation.\n        semantic: Target semantic\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n    parsed = get_docstring_sections(ast)\n    sections = [\n        p\n        for p in parsed\n        if isinstance(p, DocstringSectionText)\n        or (isinstance(p, DocstringSectionAdmonition) and p.title != \"Return\")\n    ]\n    formatted = format_detailed_docstring(sections, parent=ast, project=project)\n    params_doc = parse_parameters(ast, project=project)\n    returns_doc = parse_returns(ast, project=project)\n\n    return Callable(\n        name=ast.name,\n        documentation=Documentation(\n            sections=[s for s in [*formatted.sections, returns_doc, params_doc] if s]\n        ),\n        path=canonical_path(ast=ast, project=project),\n        code=parse_code(ast=ast, project=project),\n        semantic=semantic,\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_function"
        },
        {
            "name": "parse_class",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms a class documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's class documentation.\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_class(ast: AstClass, project: Project) -> Type",
                "filePath": "py_griffe.py",
                "startLine": 356,
                "endLine": 394,
                "references": {
                    "Type": "@nav/api/Backends/mkdocs_py_griffe.models.Type",
                    "Entity": "@nav/api/Backends/mkdocs_py_griffe.models.Entity",
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                    "Code": "@nav/api/Backends/mkdocs_py_griffe.models.Code",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                    "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                    "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                    "Callable": "@nav/api/Backends/mkdocs_py_griffe.models.Callable",
                    "Attribute": "@nav/api/Backends/mkdocs_py_griffe.models.Attribute",
                    "AstClass": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Class",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_class": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_class"
                },
                "implementation": "def parse_class(ast: AstClass, project: Project) -> Type:\n    \"\"\"\n    Transforms a class documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's class documentation.\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n    bases = find_attributes_of_type(ast.bases, ExprName)\n    semantic = Semantic(\n        role=\"class\",\n        labels=[],\n        attributes={},\n        relations={\"inherits\": [b.canonical_path for b in bases]},\n    )\n    return Type(\n        name=ast.name,\n        documentation=format_detailed_docstring(\n            sections=get_docstring_sections(ast),\n            parent=ast,\n            project=project,\n        ),\n        path=canonical_path(ast=ast, project=project),\n        semantic=semantic,\n        attributes=[\n            parse_attribute(ast=attr, semantic=ATTR_SEMANTIC, project=project)\n            for attr in ast.attributes.values()\n            if attr.docstring and not attr.inherited\n        ],\n        callables=[\n            parse_function(ast=f, semantic=METHOD_SEMANTIC, project=project)\n            for f in ast.functions.values()\n            if f and f.docstring\n        ],\n        code=parse_code(ast, project=project),\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_class"
        },
        {
            "name": "parse_parameters",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms a function's parameters documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's function documentation.\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_parameters(ast: AstFunction, project: Project) -> DocumentationSection | None",
                "filePath": "py_griffe.py",
                "startLine": 397,
                "endLine": 431,
                "references": {
                    "DocumentationSection": "@nav/api/Backends/mkdocs_py_griffe.models.DocumentationSection",
                    "AstFunction": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Function",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_parameters": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_parameters"
                },
                "implementation": "def parse_parameters(ast: AstFunction, project: Project) -> DocumentationSection | None:\n    \"\"\"\n    Transforms a function's parameters documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's function documentation.\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n    parsed = get_docstring_sections(ast)\n\n    params = next(\n        (p for p in parsed if isinstance(p, DocstringSectionParameters)), None\n    )\n\n    def format_param(e):\n        with_links = replace_links(\n            e.description, parent=ast.canonical_path, project=project\n        )\n        return f\"*  **{e.name}**: {with_links}\"\n\n    if not params:\n        return None\n\n    content = functools.reduce(\n        lambda acc, e: f\"{acc}\\n{format_param(e)}\", params.value, \"\"\n    )\n    return DocumentationSection(\n        title=\"Arguments\",\n        content=content,\n        contentType=\"Markdown\",\n        semantic=Semantic(role=\"arguments\", labels=[], attributes={}, relations={}),\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_parameters"
        },
        {
            "name": "parse_returns",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms a function's returns documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's function documentation.\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_returns(ast: AstFunction, project: Project) -> DocumentationSection | None",
                "filePath": "py_griffe.py",
                "startLine": 434,
                "endLine": 473,
                "references": {
                    "DocumentationSection": "@nav/api/Backends/mkdocs_py_griffe.models.DocumentationSection",
                    "AstFunction": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Function",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_returns": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_returns"
                },
                "implementation": "def parse_returns(ast: AstFunction, project: Project) -> DocumentationSection | None:\n    \"\"\"\n    Transforms a function's returns documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's function documentation.\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n\n    parsed = get_docstring_sections(ast)\n\n    returns = next(\n        (p for p in parsed if isinstance(p, DocstringSectionReturns)),\n        None,\n    )\n    if returns:\n        try:\n            returns_doc = replace_links(\n                returns.value[0].description,\n                parent=ast.canonical_path,\n                project=project,\n            )\n            return DocumentationSection(\n                title=\"Returns\",\n                content=returns_doc,\n                contentType=\"Markdown\",\n                semantic=Semantic(\n                    role=\"returns\", labels=[], attributes={}, relations={}\n                ),\n            )\n        except Exception as e:\n            DocReporter.add_error(\n                ast.canonical_path,\n                f\"Failed to parse return of function {ast.name}: {e}\",\n            )\n\n    return None"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_returns"
        },
        {
            "name": "parse_attribute",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms an attribute documentation as provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's module documentation.\n*  **semantic**: Target semantic.\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_attribute(\n    ast: AstAttribute, semantic: Semantic, project: Project\n) -> Attribute",
                "filePath": "py_griffe.py",
                "startLine": 606,
                "endLine": 630,
                "references": {
                    "Attribute": "@nav/api/Backends/mkdocs_py_griffe.models.Attribute",
                    "Entity": "@nav/api/Backends/mkdocs_py_griffe.models.Entity",
                    "AstAttribute": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Attribute",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_attribute": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_attribute"
                },
                "implementation": "def parse_attribute(\n    ast: AstAttribute, semantic: Semantic, project: Project\n) -> Attribute:\n    \"\"\"\n    Transforms an attribute documentation as provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's module documentation.\n        semantic: Target semantic.\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n    sections = get_docstring_sections(ast)\n    documentation = format_detailed_docstring(\n        sections=sections, parent=ast, project=project\n    )\n    return Attribute(\n        name=ast.name,\n        semantic=semantic,\n        documentation=documentation,\n        path=canonical_path(ast=ast, project=project),\n        code=parse_code(ast=ast, project=project),\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_attribute"
        },
        {
            "name": "parse_code",
            "documentation": {
                "sections": [
                    {
                        "content": "Transforms a code documentation from class, function or attribute provided by griffe to the mkdocs-ts models.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "The parsed model.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    },
                    {
                        "content": "\n*  **ast**: Griffe's module documentation.\n*  **project**: Project description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def parse_code(ast: AstClass | AstFunction | AstAttribute, project: Project) -> Code",
                "filePath": "py_griffe.py",
                "startLine": 649,
                "endLine": 722,
                "references": {
                    "Code": "@nav/api/Backends/mkdocs_py_griffe.models.Code",
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "int": "https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex",
                    "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
                    "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                    "Optional": "https://docs.python.org/3/library/typing.html#typing.Optional",
                    "AstClass": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Class",
                    "AstFunction": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Function",
                    "AstAttribute": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Attribute",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project",
                    "parse_code": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.parse_code"
                },
                "implementation": "def parse_code(ast: AstClass | AstFunction | AstAttribute, project: Project) -> Code:\n    \"\"\"\n    Transforms a code documentation from class, function or attribute provided by griffe to the mkdocs-ts models.\n\n    Parameters:\n        ast: Griffe's module documentation.\n        project: Project description.\n\n    Returns:\n        The parsed model.\n    \"\"\"\n\n    def get_nav_path(e: ExprName | AstClass | AstFunction):\n        py_path = e.canonical_path\n        if py_path.startswith(project.root_ast.name):\n            return f\"@nav{project.config.base_nav}.{canonical_path(ast=e, project=project)}\"\n        if py_path in project.config.external_links:\n            return project.config.external_links[py_path]\n        print(\"Link unknown\", e.canonical_path)\n        return e.canonical_path\n\n    file_path = str(ast.filepath.relative_to(project.root_ast.filepath.parent))\n    start_line = ast.lineno\n    end_line = ast.endlineno\n    references = {}\n    implementation = \"\"\n    declaration = \"\"\n    if isinstance(ast, AstAttribute):\n        types_annotation = find_attributes_of_type(ast.annotation, ExprName)\n        types_value = find_attributes_of_type(ast.value, ExprName)\n        declaration = functools.reduce(lambda acc, e: f\"{acc}\\n{e}\", ast.lines)\n        implementation = None\n        references = {\n            e.name: get_nav_path(e=e) for e in [*types_annotation, *types_value]\n        }\n\n    if isinstance(ast, AstFunction):\n        types_annotation = find_attributes_of_type(ast.annotation, ExprName)\n        returns_annotation = find_attributes_of_type(ast.returns, ExprName)\n        parameters_annotation = find_attributes_of_type(ast.parameters, ExprName)\n        all_annotations = [\n            *types_annotation,\n            *returns_annotation,\n            *parameters_annotation,\n        ]\n        implementation = functools.reduce(lambda acc, e: f\"{acc}\\n{e}\", ast.lines)\n        declaration = extract_function_declaration(implementation)\n        references = {\n            **{e.name: get_nav_path(e=e) for e in all_annotations},\n            ast.name: get_nav_path(e=ast),\n        }\n\n    if isinstance(ast, AstClass):\n        decorators_annotation = find_attributes_of_type(ast.decorators, ExprName)\n        bases_annotation = find_attributes_of_type(ast.bases, ExprName)\n        all_annotations = [\n            *decorators_annotation,\n            *bases_annotation,\n        ]\n        implementation = functools.reduce(lambda acc, e: f\"{acc}\\n{e}\", ast.lines)\n        declaration = extract_class_declaration(implementation)\n        references = {\n            **{e.name: get_nav_path(e=e) for e in all_annotations},\n            ast.name: get_nav_path(e=ast),\n        }\n\n    return Code(\n        filePath=file_path,\n        startLine=start_line,\n        endLine=end_line,\n        declaration=declaration,\n        implementation=implementation,\n        references=references,\n    )"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.parse_code"
        },
        {
            "name": "generate_api",
            "documentation": {
                "sections": [
                    {
                        "content": "Create documentation API files from an AST parsed by griffe library.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "\n*  **root_ast**: Root module's AST.\n*  **config**: Configuration.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "arguments",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Arguments"
                    }
                ]
            },
            "code": {
                "declaration": "def generate_api(root_ast: AstModule, config: Configuration)",
                "filePath": "py_griffe.py",
                "startLine": 810,
                "endLine": 837,
                "references": {
                    "AstModule": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Module",
                    "Configuration": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Configuration",
                    "generate_api": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.generate_api"
                },
                "implementation": "def generate_api(root_ast: AstModule, config: Configuration):\n    \"\"\"\n    Create documentation API files from an AST parsed by griffe library.\n\n    Parameters:\n        root_ast: Root module's AST.\n        config: Configuration.\n    \"\"\"\n\n    project = Project(\n        config=config,\n        root_ast=root_ast,\n        all_symbols=init_symbols(root_ast=root_ast),\n    )\n\n    def get_doc_rec(module: AstModule, path: str):\n\n        doc = parse_module(module, path, project=project)\n        target_path = config.out / f\"{path}.json\"\n        target_path.exists() and target_path.unlink()\n\n        with open(target_path, \"w\") as json_file:\n            json.dump(doc, json_file, cls=DataclassJSONEncoder, indent=4)\n        for child in doc.children:\n            gr_child = module[child.name]\n            get_doc_rec(module=gr_child, path=f\"{path}.{child.name}\")\n\n    get_doc_rec(module=root_ast, path=root_ast.name)"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.generate_api"
        },
        {
            "name": "std_links",
            "documentation": {
                "sections": [
                    {
                        "content": "Returns typical links for standard python symbols from `https://docs.python.org`.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    },
                    {
                        "content": "Dictionary `symbol-path` -> `URL`",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "returns",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": "Returns"
                    }
                ]
            },
            "code": {
                "declaration": "def std_links() -> dict[str, str]",
                "filePath": "std_links.py",
                "startLine": 1,
                "endLine": 44,
                "references": {
                    "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "std_links": "@nav/api/Backends/mkdocs_py_griffe.std_links.std_links"
                },
                "implementation": "def std_links() -> dict[str, str]:\n    \"\"\"\n    Returns typical links for standard python symbols from `https://docs.python.org`.\n\n    Returns:\n        Dictionary `symbol-path` -> `URL`\n    \"\"\"\n\n    typing_url = \"https://docs.python.org/3/library/typing.html\"\n    return {\n        \"Exception\": \"https://docs.python.org/3/tutorial/errors.html\",\n        \"bytes\": \"https://docs.python.org/3/library/stdtypes.html#bytes-and-bytearray-operations\",\n        \"str\": \"https://docs.python.org/fr/3/library/string.html\",\n        \"bool\": \"https://docs.python.org/fr/3/library/stdtypes.html#boolean-type-bool\",\n        \"int\": \"https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex\",\n        \"float\": \"https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex\",\n        \"list\": \"https://docs.python.org/3/library/stdtypes.html#lists\",\n        \"dict\": \"https://docs.python.org/3/library/stdtypes.html#mapping-types-dict\",\n        \"set\": \"https://docs.python.org/3/library/stdtypes.html#set\",\n        \"tuple\": \"https://docs.python.org/3/library/stdtypes.html#tuple\",\n        \"asyncio.subprocess.Process\": \"https://docs.python.org/3/library/asyncio-subprocess.html\",\n        \"collections.abc.Mapping\": \"https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping\",\n        \"io.BytesIO\": \"https://docs.python.org/3/library/io.html#io.BytesIO\",\n        \"enum.Enum\": \"https://docs.python.org/3/library/enum.html\",\n        \"abc.ABC\": \"https://docs.python.org/3/library/abc.html\",\n        \"collections.abc.Awaitable\": \"https://docs.python.org/3/library/collections.abc.html#collections.abc.Awaitable\",\n        \"pathlib.Path\": \"https://docs.python.org/fr/3/library/pathlib.html#pathlib.Path\",\n        \"typing.List\": f\"{typing_url}#typing.List\",\n        \"typing.Dict\": f\"{typing_url}#typing.Dict\",\n        \"typing.Tuple\": f\"{typing_url}#typing.Tuple\",\n        \"typing.Optional\": f\"{typing_url}#typing.Optional\",\n        \"typing.Union\": f\"{typing_url}#typing.Union\",\n        \"typing.Any\": f\"{typing_url}#typing.Any\",\n        \"typing.Mapping\": f\"{typing_url}#typing.Mapping\",\n        \"typing.Awaitable\": f\"{typing_url}#typing.Awaitable\",\n        \"typing.Callable\": f\"{typing_url}#typing.Callable\",\n        \"typing.Set\": f\"{typing_url}#typing.Set\",\n        \"typing.NamedTuple\": f\"{typing_url}#typing.NamedTuple\",\n        \"typing.Literal\": f\"{typing_url}#typing.Literal\",\n        \"typing.Generic\": \"https://mypy.readthedocs.io/en/stable/generics.html\",\n        \"asyncio.Future\": \"https://docs.python.org/3/library/asyncio-future.html\",\n        \"dataclasses\": \"https://docs.python.org/3/library/dataclasses.html#\",\n        \"dataclasses.dataclass\": \"https://docs.python.org/3/library/dataclasses.html#\",\n    }"
            },
            "semantic": {
                "role": "function",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "std_links.std_links"
        }
    ],
    "types": [
        {
            "name": "Semantic",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic representation.\n\nThey represent metadata transmitted to the frontend renderer to display appropriately the elements.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass Semantic",
                "filePath": "models.py",
                "startLine": 14,
                "endLine": 37,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass Semantic:\n    \"\"\"\n    Semantic representation.\n\n    They represent metadata transmitted to the frontend renderer to display appropriately the elements.\n    \"\"\"\n\n    role: str\n    \"\"\"\n    Role, a unique meaning (*e.g.* `Class`, `Interface`, `TypeAlias`, *etc.*).\n    \"\"\"\n    labels: list[str]\n    \"\"\"\n    Some labels.\n    \"\"\"\n    attributes: dict[str, str]\n    \"\"\"\n    Some attributes.\n    \"\"\"\n    relations: dict[str, list[str]]\n    \"\"\"\n    Some relation with other entities (grouped by a category keyword, *e.g.* `InheritedBy`).\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.Semantic",
            "callables": [],
            "attributes": [
                {
                    "name": "role",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Role, a unique meaning (*e.g.* `Class`, `Interface`, `TypeAlias`, *etc.*).",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    role: str",
                        "filePath": "models.py",
                        "startLine": 22,
                        "endLine": 22,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Semantic.role"
                },
                {
                    "name": "labels",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Some labels.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    labels: list[str]",
                        "filePath": "models.py",
                        "startLine": 26,
                        "endLine": 26,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Semantic.labels"
                },
                {
                    "name": "attributes",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Some attributes.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    attributes: dict[str, str]",
                        "filePath": "models.py",
                        "startLine": 30,
                        "endLine": 30,
                        "references": {
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Semantic.attributes"
                },
                {
                    "name": "relations",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Some relation with other entities (grouped by a category keyword, *e.g.* `InheritedBy`).",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    relations: dict[str, list[str]]",
                        "filePath": "models.py",
                        "startLine": 34,
                        "endLine": 34,
                        "references": {
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
                            "str": "https://docs.python.org/fr/3/library/string.html",
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Semantic.relations"
                }
            ]
        },
        {
            "name": "DocumentationSection",
            "documentation": {
                "sections": [
                    {
                        "content": "Documentation section.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass DocumentationSection",
                "filePath": "models.py",
                "startLine": 40,
                "endLine": 61,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "DocumentationSection": "@nav/api/Backends/mkdocs_py_griffe.models.DocumentationSection"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass DocumentationSection:\n    \"\"\"\n    Documentation section.\n    \"\"\"\n\n    content: str\n    \"\"\"\n    Section's content.\n    \"\"\"\n    contentType: str\n    \"\"\"\n    Content's type.\n    \"\"\"\n    semantic: Semantic\n    \"\"\"\n    Associated semantic.\n    \"\"\"\n    title: Optional[str] = None\n    \"\"\"\n    Section's title.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.DocumentationSection",
            "callables": [],
            "attributes": [
                {
                    "name": "content",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Section's content.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    content: str",
                        "filePath": "models.py",
                        "startLine": 46,
                        "endLine": 46,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.DocumentationSection.content"
                },
                {
                    "name": "contentType",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Content's type.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    contentType: str",
                        "filePath": "models.py",
                        "startLine": 50,
                        "endLine": 50,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.DocumentationSection.contentType"
                },
                {
                    "name": "semantic",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Associated semantic.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    semantic: Semantic",
                        "filePath": "models.py",
                        "startLine": 54,
                        "endLine": 54,
                        "references": {
                            "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                            "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                            "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                            "str": "https://docs.python.org/fr/3/library/string.html",
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.DocumentationSection.semantic"
                },
                {
                    "name": "title",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Section's title.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    title: Optional[str] = None",
                        "filePath": "models.py",
                        "startLine": 58,
                        "endLine": 58,
                        "references": {
                            "Optional": "https://docs.python.org/3/library/typing.html#typing.Optional",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.DocumentationSection.title"
                }
            ]
        },
        {
            "name": "Documentation",
            "documentation": {
                "sections": [
                    {
                        "content": "An entity documentation.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass Documentation",
                "filePath": "models.py",
                "startLine": 64,
                "endLine": 73,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass Documentation:\n    \"\"\"\n    An entity documentation.\n    \"\"\"\n\n    sections: list[DocumentationSection]\n    \"\"\"\n    List of the sections.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.Documentation",
            "callables": [],
            "attributes": [
                {
                    "name": "sections",
                    "documentation": {
                        "sections": [
                            {
                                "content": "List of the sections.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    sections: list[DocumentationSection]",
                        "filePath": "models.py",
                        "startLine": 70,
                        "endLine": 70,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "DocumentationSection": "@nav/api/Backends/mkdocs_py_griffe.models.DocumentationSection"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Documentation.sections"
                }
            ]
        },
        {
            "name": "Code",
            "documentation": {
                "sections": [
                    {
                        "content": "Entity code's description.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass Code",
                "filePath": "models.py",
                "startLine": 76,
                "endLine": 105,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "Code": "@nav/api/Backends/mkdocs_py_griffe.models.Code"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass Code:\n    \"\"\"\n    Entity code's description.\n    \"\"\"\n\n    declaration: str\n    \"\"\"\n    Entity's declaration.\n    \"\"\"\n    filePath: str\n    \"\"\"\n    File path in which the declaration is included.\n    \"\"\"\n    startLine: int\n    \"\"\"\n    Starting line of the declaration.\n    \"\"\"\n    endLine: int\n    \"\"\"\n    Ending line of the declaration.\n    \"\"\"\n    references: dict[str, EntityPath]\n    \"\"\"\n    References to other entities in the declaration.\n    \"\"\"\n    implementation: Optional[str] = None\n    \"\"\"\n    Optional associated implementation.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.Code",
            "callables": [],
            "attributes": [
                {
                    "name": "declaration",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Entity's declaration.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    declaration: str",
                        "filePath": "models.py",
                        "startLine": 82,
                        "endLine": 82,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Code.declaration"
                },
                {
                    "name": "filePath",
                    "documentation": {
                        "sections": [
                            {
                                "content": "File path in which the declaration is included.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    filePath: str",
                        "filePath": "models.py",
                        "startLine": 86,
                        "endLine": 86,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Code.filePath"
                },
                {
                    "name": "startLine",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Starting line of the declaration.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    startLine: int",
                        "filePath": "models.py",
                        "startLine": 90,
                        "endLine": 90,
                        "references": {
                            "int": "https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Code.startLine"
                },
                {
                    "name": "endLine",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Ending line of the declaration.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    endLine: int",
                        "filePath": "models.py",
                        "startLine": 94,
                        "endLine": 94,
                        "references": {
                            "int": "https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Code.endLine"
                },
                {
                    "name": "references",
                    "documentation": {
                        "sections": [
                            {
                                "content": "References to other entities in the declaration.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    references: dict[str, EntityPath]",
                        "filePath": "models.py",
                        "startLine": 98,
                        "endLine": 98,
                        "references": {
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
                            "str": "https://docs.python.org/fr/3/library/string.html",
                            "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Code.references"
                },
                {
                    "name": "implementation",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Optional associated implementation.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    implementation: Optional[str] = None",
                        "filePath": "models.py",
                        "startLine": 102,
                        "endLine": 102,
                        "references": {
                            "Optional": "https://docs.python.org/3/library/typing.html#typing.Optional",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Code.implementation"
                }
            ]
        },
        {
            "name": "Entity",
            "documentation": {
                "sections": [
                    {
                        "content": "Base structure to represent an entity within the code, e.g. class, structure, function, variable, *etc.*.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass Entity",
                "filePath": "models.py",
                "startLine": 108,
                "endLine": 133,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "Entity": "@nav/api/Backends/mkdocs_py_griffe.models.Entity"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass Entity:\n    \"\"\"\n    Base structure to represent an entity within the code, e.g. class, structure, function, variable, *etc.*.\n    \"\"\"\n\n    name: str\n    \"\"\"\n    Name.\n    \"\"\"\n    documentation: Documentation\n    \"\"\"\n    Documentation\n    \"\"\"\n    code: Code\n    \"\"\"\n    Code information.\n    \"\"\"\n    semantic: Semantic\n    \"\"\"\n    Associated semantic.\n    \"\"\"\n    path: EntityPath\n    \"\"\"\n    The path (e.g. `ModuleFoo.TypeBar.attrBaz`).\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.Entity",
            "callables": [],
            "attributes": [
                {
                    "name": "name",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    name: str",
                        "filePath": "models.py",
                        "startLine": 114,
                        "endLine": 114,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Entity.name"
                },
                {
                    "name": "documentation",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Documentation",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    documentation: Documentation",
                        "filePath": "models.py",
                        "startLine": 118,
                        "endLine": 118,
                        "references": {
                            "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                            "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                            "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "DocumentationSection": "@nav/api/Backends/mkdocs_py_griffe.models.DocumentationSection"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Entity.documentation"
                },
                {
                    "name": "code",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Code information.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    code: Code",
                        "filePath": "models.py",
                        "startLine": 122,
                        "endLine": 122,
                        "references": {
                            "Code": "@nav/api/Backends/mkdocs_py_griffe.models.Code",
                            "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                            "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                            "str": "https://docs.python.org/fr/3/library/string.html",
                            "int": "https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex",
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
                            "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                            "Optional": "https://docs.python.org/3/library/typing.html#typing.Optional"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Entity.code"
                },
                {
                    "name": "semantic",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Associated semantic.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    semantic: Semantic",
                        "filePath": "models.py",
                        "startLine": 126,
                        "endLine": 126,
                        "references": {
                            "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                            "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                            "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                            "str": "https://docs.python.org/fr/3/library/string.html",
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Entity.semantic"
                },
                {
                    "name": "path",
                    "documentation": {
                        "sections": [
                            {
                                "content": "The path (e.g. `ModuleFoo.TypeBar.attrBaz`).",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    path: EntityPath",
                        "filePath": "models.py",
                        "startLine": 130,
                        "endLine": 130,
                        "references": {
                            "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Entity.path"
                }
            ]
        },
        {
            "name": "Type",
            "documentation": {
                "sections": [
                    {
                        "content": "Type representation.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass Type(Entity)",
                "filePath": "models.py",
                "startLine": 147,
                "endLine": 160,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "Entity": "@nav/api/Backends/mkdocs_py_griffe.models.Entity",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                    "Code": "@nav/api/Backends/mkdocs_py_griffe.models.Code",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                    "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                    "Type": "@nav/api/Backends/mkdocs_py_griffe.models.Type"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass Type(Entity):\n    \"\"\"\n    Type representation.\n    \"\"\"\n\n    callables: list[Callable]\n    \"\"\"\n    List of owned callable.\n    \"\"\"\n    attributes: list[Attribute]\n    \"\"\"\n    List of owned attributes.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": [
                        "mkdocs_py_griffe.models.Entity",
                        "dataclasses",
                        "dataclasses.dataclass",
                        "dataclasses",
                        "dataclasses.dataclass",
                        "dataclasses",
                        "dataclasses.dataclass",
                        "dataclasses",
                        "dataclasses.dataclass",
                        "str",
                        "mkdocs_py_griffe.models.Documentation",
                        "mkdocs_py_griffe.models.Code",
                        "mkdocs_py_griffe.models.Semantic",
                        "mkdocs_py_griffe.models.EntityPath"
                    ]
                }
            },
            "path": "models.Type",
            "callables": [],
            "attributes": [
                {
                    "name": "callables",
                    "documentation": {
                        "sections": [
                            {
                                "content": "List of owned callable.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    callables: list[Callable]",
                        "filePath": "models.py",
                        "startLine": 153,
                        "endLine": 153,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "Callable": "@nav/api/Backends/mkdocs_py_griffe.models.Callable"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Type.callables"
                },
                {
                    "name": "attributes",
                    "documentation": {
                        "sections": [
                            {
                                "content": "List of owned attributes.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    attributes: list[Attribute]",
                        "filePath": "models.py",
                        "startLine": 157,
                        "endLine": 157,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "Attribute": "@nav/api/Backends/mkdocs_py_griffe.models.Attribute"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Type.attributes"
                }
            ]
        },
        {
            "name": "File",
            "documentation": {
                "sections": [
                    {
                        "content": "File representation.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass File",
                "filePath": "models.py",
                "startLine": 163,
                "endLine": 180,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "File": "@nav/api/Backends/mkdocs_py_griffe.models.File"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass File:\n    \"\"\"\n    File representation.\n    \"\"\"\n\n    name: str\n    \"\"\"\n    Name.\n    \"\"\"\n    path: str\n    \"\"\"\n    Path.\n    \"\"\"\n    documentation: Documentation\n    \"\"\"\n    Documentation.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.File",
            "callables": [],
            "attributes": [
                {
                    "name": "name",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    name: str",
                        "filePath": "models.py",
                        "startLine": 169,
                        "endLine": 169,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.File.name"
                },
                {
                    "name": "path",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Path.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    path: str",
                        "filePath": "models.py",
                        "startLine": 173,
                        "endLine": 173,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.File.path"
                },
                {
                    "name": "documentation",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Documentation.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    documentation: Documentation",
                        "filePath": "models.py",
                        "startLine": 177,
                        "endLine": 177,
                        "references": {
                            "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                            "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                            "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "DocumentationSection": "@nav/api/Backends/mkdocs_py_griffe.models.DocumentationSection"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.File.documentation"
                }
            ]
        },
        {
            "name": "ChildModule",
            "documentation": {
                "sections": [
                    {
                        "content": "Child module representation.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass ChildModule",
                "filePath": "models.py",
                "startLine": 183,
                "endLine": 200,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "ChildModule": "@nav/api/Backends/mkdocs_py_griffe.models.ChildModule"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass ChildModule:\n    \"\"\"\n    Child module representation.\n    \"\"\"\n\n    name: str\n    \"\"\"\n    Name.\n    \"\"\"\n    path: EntityPath\n    \"\"\"\n    Path (*e.g.* `ModuleFoo.ModuleBar`).\n    \"\"\"\n    isLeaf: bool\n    \"\"\"\n    Whether it includes children modules.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.ChildModule",
            "callables": [],
            "attributes": [
                {
                    "name": "name",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    name: str",
                        "filePath": "models.py",
                        "startLine": 189,
                        "endLine": 189,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.ChildModule.name"
                },
                {
                    "name": "path",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Path (*e.g.* `ModuleFoo.ModuleBar`).",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    path: EntityPath",
                        "filePath": "models.py",
                        "startLine": 193,
                        "endLine": 193,
                        "references": {
                            "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.ChildModule.path"
                },
                {
                    "name": "isLeaf",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Whether it includes children modules.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    isLeaf: bool",
                        "filePath": "models.py",
                        "startLine": 197,
                        "endLine": 197,
                        "references": {
                            "bool": "https://docs.python.org/fr/3/library/stdtypes.html#boolean-type-bool"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.ChildModule.isLeaf"
                }
            ]
        },
        {
            "name": "Module",
            "documentation": {
                "sections": [
                    {
                        "content": "Module representation.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "@dataclasses.dataclass(frozen=True)\nclass Module",
                "filePath": "models.py",
                "startLine": 203,
                "endLine": 246,
                "references": {
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "Module": "@nav/api/Backends/mkdocs_py_griffe.models.Module"
                },
                "implementation": "@dataclasses.dataclass(frozen=True)\nclass Module:\n    \"\"\"\n    Module representation.\n    \"\"\"\n\n    name: str\n    \"\"\"\n    Name.\n    \"\"\"\n    documentation: Documentation\n    \"\"\"\n    Documentation\n    \"\"\"\n\n    semantic: Semantic\n    \"\"\"\n    Associated semantic.\n    \"\"\"\n    path: EntityPath\n    \"\"\"\n    The path (e.g. `ModuleFoo.TypeBar.attrBaz`).\n    \"\"\"\n\n    children: list[ChildModule]\n    \"\"\"\n    Children modules.\n    \"\"\"\n    callables: list[Callable]\n    \"\"\"\n    Callable components.\n    \"\"\"\n    types: list[Type]\n    \"\"\"\n    Types components.\n    \"\"\"\n    attributes: list[Attribute]\n    \"\"\"\n    Attributes components.\n    \"\"\"\n    files: list[File]\n    \"\"\"\n    Files components.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": []
                }
            },
            "path": "models.Module",
            "callables": [],
            "attributes": [
                {
                    "name": "name",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Name.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    name: str",
                        "filePath": "models.py",
                        "startLine": 209,
                        "endLine": 209,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.name"
                },
                {
                    "name": "documentation",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Documentation",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    documentation: Documentation",
                        "filePath": "models.py",
                        "startLine": 213,
                        "endLine": 213,
                        "references": {
                            "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                            "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                            "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "DocumentationSection": "@nav/api/Backends/mkdocs_py_griffe.models.DocumentationSection"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.documentation"
                },
                {
                    "name": "semantic",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Associated semantic.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    semantic: Semantic",
                        "filePath": "models.py",
                        "startLine": 218,
                        "endLine": 218,
                        "references": {
                            "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                            "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                            "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                            "str": "https://docs.python.org/fr/3/library/string.html",
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.semantic"
                },
                {
                    "name": "path",
                    "documentation": {
                        "sections": [
                            {
                                "content": "The path (e.g. `ModuleFoo.TypeBar.attrBaz`).",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    path: EntityPath",
                        "filePath": "models.py",
                        "startLine": 222,
                        "endLine": 222,
                        "references": {
                            "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.path"
                },
                {
                    "name": "children",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Children modules.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    children: list[ChildModule]",
                        "filePath": "models.py",
                        "startLine": 227,
                        "endLine": 227,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "ChildModule": "@nav/api/Backends/mkdocs_py_griffe.models.ChildModule"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.children"
                },
                {
                    "name": "callables",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Callable components.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    callables: list[Callable]",
                        "filePath": "models.py",
                        "startLine": 231,
                        "endLine": 231,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "Callable": "@nav/api/Backends/mkdocs_py_griffe.models.Callable"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.callables"
                },
                {
                    "name": "types",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Types components.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    types: list[Type]",
                        "filePath": "models.py",
                        "startLine": 235,
                        "endLine": 235,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "Type": "@nav/api/Backends/mkdocs_py_griffe.models.Type"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.types"
                },
                {
                    "name": "attributes",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Attributes components.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    attributes: list[Attribute]",
                        "filePath": "models.py",
                        "startLine": 239,
                        "endLine": 239,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "Attribute": "@nav/api/Backends/mkdocs_py_griffe.models.Attribute"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.attributes"
                },
                {
                    "name": "files",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Files components.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    files: list[File]",
                        "filePath": "models.py",
                        "startLine": 243,
                        "endLine": 243,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "File": "@nav/api/Backends/mkdocs_py_griffe.models.File"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "models.Module.files"
                }
            ]
        },
        {
            "name": "Configuration",
            "documentation": {
                "sections": [
                    {
                        "content": "Represents the configuration to generate API files using [generate_api](@nav/api/Backends/mkdocs_py_griffe.py_griffe.generate_api).",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "class Configuration(NamedTuple)",
                "filePath": "py_griffe.py",
                "startLine": 39,
                "endLine": 63,
                "references": {
                    "NamedTuple": "https://docs.python.org/3/library/typing.html#typing.NamedTuple",
                    "Configuration": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Configuration"
                },
                "implementation": "class Configuration(NamedTuple):\n    \"\"\"\n    Represents the configuration to generate API files using :func:`generate_api`.\n    \"\"\"\n\n    base_nav: str\n    \"\"\"\n    The base URL for the navigation.\n    \"\"\"\n    out: Path\n    \"\"\"\n    Path of the output folder in which API files are generated.\n    \"\"\"\n    external_links: dict[str, str] = {}\n    \"\"\"\n    External links to cross-reference, e.g.:\n    ```\n    {   \n        \"float\": \"https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex\",\n        \"list\": \"https://docs.python.org/3/library/stdtypes.html#lists\",\n        \"dict\": \"https://docs.python.org/3/library/stdtypes.html#mapping-types-dict\",\n    }\n    ```\n    The function :func:`std_links` is available is includes common standard Python links.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": [
                        "typing.NamedTuple"
                    ]
                }
            },
            "path": "py_griffe.Configuration",
            "callables": [],
            "attributes": [
                {
                    "name": "base_nav",
                    "documentation": {
                        "sections": [
                            {
                                "content": "The base URL for the navigation.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    base_nav: str",
                        "filePath": "py_griffe.py",
                        "startLine": 44,
                        "endLine": 44,
                        "references": {
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "py_griffe.Configuration.base_nav"
                },
                {
                    "name": "out",
                    "documentation": {
                        "sections": [
                            {
                                "content": "Path of the output folder in which API files are generated.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    out: Path",
                        "filePath": "py_griffe.py",
                        "startLine": 48,
                        "endLine": 48,
                        "references": {
                            "Path": "https://docs.python.org/fr/3/library/pathlib.html#pathlib.Path"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "py_griffe.Configuration.out"
                },
                {
                    "name": "external_links",
                    "documentation": {
                        "sections": [
                            {
                                "content": "External links to cross-reference, e.g.:\n```\n{   \n    \"float\": \"https://docs.python.org/fr/3/library/stdtypes.html#numeric-types-int-float-complex\",\n    \"list\": \"https://docs.python.org/3/library/stdtypes.html#lists\",\n    \"dict\": \"https://docs.python.org/3/library/stdtypes.html#mapping-types-dict\",\n}\n```\nThe function [std_links](@nav/api/Backends/mkdocs_py_griffe.std_links.std_links) is available is includes common standard Python links.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    external_links: dict[str, str] = {}",
                        "filePath": "py_griffe.py",
                        "startLine": 52,
                        "endLine": 52,
                        "references": {
                            "dict": "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "py_griffe.Configuration.external_links"
                }
            ]
        },
        {
            "name": "Project",
            "documentation": {
                "sections": [
                    {
                        "content": "Represents the project, holding global symbols.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "class Project(NamedTuple)",
                "filePath": "py_griffe.py",
                "startLine": 66,
                "endLine": 82,
                "references": {
                    "NamedTuple": "https://docs.python.org/3/library/typing.html#typing.NamedTuple",
                    "Project": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Project"
                },
                "implementation": "class Project(NamedTuple):\n    \"\"\"\n    Represents the project, holding global symbols.\n    \"\"\"\n\n    config: Configuration\n    \"\"\"\n    The configuration.\n    \"\"\"\n    root_ast: AstModule\n    \"\"\"\n    The root AST from griffe of the documented module.\n    \"\"\"\n    all_symbols: list[str]\n    \"\"\"\n    The list of all symbols defined in the documented module.\n    \"\"\""
            },
            "semantic": {
                "role": "class",
                "labels": [],
                "attributes": {},
                "relations": {
                    "inherits": [
                        "typing.NamedTuple"
                    ]
                }
            },
            "path": "py_griffe.Project",
            "callables": [],
            "attributes": [
                {
                    "name": "config",
                    "documentation": {
                        "sections": [
                            {
                                "content": "The configuration.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    config: Configuration",
                        "filePath": "py_griffe.py",
                        "startLine": 71,
                        "endLine": 71,
                        "references": {
                            "Configuration": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.Configuration",
                            "NamedTuple": "https://docs.python.org/3/library/typing.html#typing.NamedTuple"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "py_griffe.Project.config"
                },
                {
                    "name": "root_ast",
                    "documentation": {
                        "sections": [
                            {
                                "content": "The root AST from griffe of the documented module.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    root_ast: AstModule",
                        "filePath": "py_griffe.py",
                        "startLine": 75,
                        "endLine": 75,
                        "references": {
                            "AstModule": "https://mkdocstrings.github.io/griffe/reference/griffe/#griffe.Module"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "py_griffe.Project.root_ast"
                },
                {
                    "name": "all_symbols",
                    "documentation": {
                        "sections": [
                            {
                                "content": "The list of all symbols defined in the documented module.",
                                "contentType": "Markdown",
                                "semantic": {
                                    "role": "text",
                                    "labels": [],
                                    "attributes": {},
                                    "relations": {}
                                },
                                "title": null
                            }
                        ]
                    },
                    "code": {
                        "declaration": "    all_symbols: list[str]",
                        "filePath": "py_griffe.py",
                        "startLine": 79,
                        "endLine": 79,
                        "references": {
                            "list": "https://docs.python.org/3/library/stdtypes.html#lists",
                            "str": "https://docs.python.org/fr/3/library/string.html"
                        },
                        "implementation": null
                    },
                    "semantic": {
                        "role": "attribute",
                        "labels": [],
                        "attributes": {},
                        "relations": {}
                    },
                    "path": "py_griffe.Project.all_symbols"
                }
            ]
        }
    ],
    "attributes": [
        {
            "name": "ATTR_SEMANTIC",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic for class's attributes.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "ATTR_SEMANTIC = Semantic(role=\"attribute\", labels=[], attributes={}, relations={})",
                "filePath": "py_griffe.py",
                "startLine": 112,
                "endLine": 112,
                "references": {
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.ATTR_SEMANTIC"
        },
        {
            "name": "Attribute",
            "documentation": {
                "sections": [
                    {
                        "content": "Type alias for Attribute.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "Attribute = Entity",
                "filePath": "models.py",
                "startLine": 141,
                "endLine": 141,
                "references": {
                    "Entity": "@nav/api/Backends/mkdocs_py_griffe.models.Entity",
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                    "Code": "@nav/api/Backends/mkdocs_py_griffe.models.Code",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                    "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "models.Attribute"
        },
        {
            "name": "CLASS_SEMANTIC",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic for class's attributes.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "CLASS_SEMANTIC = Semantic(role=\"class\", labels=[], attributes={}, relations={})",
                "filePath": "py_griffe.py",
                "startLine": 107,
                "endLine": 107,
                "references": {
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.CLASS_SEMANTIC"
        },
        {
            "name": "Callable",
            "documentation": {
                "sections": [
                    {
                        "content": "Type alias for Callable.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "Callable = Entity",
                "filePath": "models.py",
                "startLine": 136,
                "endLine": 136,
                "references": {
                    "Entity": "@nav/api/Backends/mkdocs_py_griffe.models.Entity",
                    "dataclasses": "https://docs.python.org/3/library/dataclasses.html#",
                    "dataclass": "https://docs.python.org/3/library/dataclasses.html#",
                    "str": "https://docs.python.org/fr/3/library/string.html",
                    "Documentation": "@nav/api/Backends/mkdocs_py_griffe.models.Documentation",
                    "Code": "@nav/api/Backends/mkdocs_py_griffe.models.Code",
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic",
                    "EntityPath": "@nav/api/Backends/mkdocs_py_griffe.models.EntityPath"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "models.Callable"
        },
        {
            "name": "EntityPath",
            "documentation": {
                "sections": [
                    {
                        "content": "Entity path is the python path of a module, e.g. `moduleFoo.ClassBar.attBaz`.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "EntityPath = str",
                "filePath": "models.py",
                "startLine": 8,
                "endLine": 8,
                "references": {
                    "str": "https://docs.python.org/fr/3/library/string.html"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "models.EntityPath"
        },
        {
            "name": "FUNCTION_GLOBAL_SEMANTIC",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic for globals functions.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "FUNCTION_GLOBAL_SEMANTIC = Semantic(\n    role=\"function\", labels=[], attributes={}, relations={}\n)",
                "filePath": "py_griffe.py",
                "startLine": 100,
                "endLine": 102,
                "references": {
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.FUNCTION_GLOBAL_SEMANTIC"
        },
        {
            "name": "GLOBAL_SEMANTIC",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic for global variables.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "GLOBAL_SEMANTIC = Semantic(role=\"global\", labels=[], attributes={}, relations={})",
                "filePath": "py_griffe.py",
                "startLine": 95,
                "endLine": 95,
                "references": {
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.GLOBAL_SEMANTIC"
        },
        {
            "name": "INIT_FILENAME",
            "documentation": {
                "sections": [
                    {
                        "content": "The '__init__.py' filename to recognize module.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "INIT_FILENAME = \"__init__.py\"",
                "filePath": "py_griffe.py",
                "startLine": 33,
                "endLine": 33,
                "references": {},
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.INIT_FILENAME"
        },
        {
            "name": "METHOD_SEMANTIC",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic for class's method.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "METHOD_SEMANTIC = Semantic(role=\"method\", labels=[], attributes={}, relations={})",
                "filePath": "py_griffe.py",
                "startLine": 117,
                "endLine": 117,
                "references": {
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.METHOD_SEMANTIC"
        },
        {
            "name": "MODULE_SEMANTIC",
            "documentation": {
                "sections": [
                    {
                        "content": "Semantic for global variables.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "MODULE_SEMANTIC = Semantic(role=\"module\", labels=[], attributes={}, relations={})",
                "filePath": "py_griffe.py",
                "startLine": 90,
                "endLine": 90,
                "references": {
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.MODULE_SEMANTIC"
        },
        {
            "name": "NO_SEMANTIC",
            "documentation": {
                "sections": [
                    {
                        "content": "No semantic.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "NO_SEMANTIC = Semantic(role=\"\", labels=[], attributes={}, relations={})",
                "filePath": "py_griffe.py",
                "startLine": 85,
                "endLine": 85,
                "references": {
                    "Semantic": "@nav/api/Backends/mkdocs_py_griffe.models.Semantic"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.NO_SEMANTIC"
        },
        {
            "name": "SUPPORTED_CROSS_LINK_TAGS",
            "documentation": {
                "sections": [
                    {
                        "content": "The supported tags for sphinx like cross links.\n\n*E.g.*:\n```\n*  :tag:`symbol`\n*  :tag:`a custom text <symbol>`\n*  :tag:`a custom text <foo.bar.symbol>`\n```",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "SUPPORTED_CROSS_LINK_TAGS : set[SphinxCrossLinkTag] = {'mod', 'class', 'func', 'attr', 'meth', 'glob'}",
                "filePath": "py_griffe.py",
                "startLine": 127,
                "endLine": 127,
                "references": {
                    "set": "https://docs.python.org/3/library/stdtypes.html#set",
                    "SphinxCrossLinkTag": "@nav/api/Backends/mkdocs_py_griffe.py_griffe.SphinxCrossLinkTag"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.SUPPORTED_CROSS_LINK_TAGS"
        },
        {
            "name": "SphinxCrossLinkTag",
            "documentation": {
                "sections": [
                    {
                        "content": "Type of supported tags for sphinx like cross links.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            },
            "code": {
                "declaration": "SphinxCrossLinkTag = Literal['mod', 'class', 'func', 'attr', 'meth', 'glob']",
                "filePath": "py_griffe.py",
                "startLine": 122,
                "endLine": 122,
                "references": {
                    "Literal": "https://docs.python.org/3/library/typing.html#typing.Literal"
                },
                "implementation": null
            },
            "semantic": {
                "role": "global",
                "labels": [],
                "attributes": {},
                "relations": {}
            },
            "path": "py_griffe.SphinxCrossLinkTag"
        }
    ],
    "files": [
        {
            "name": "models",
            "path": "models.py",
            "documentation": {
                "sections": [
                    {
                        "content": "Python version of the target TypeScript [models](@nav/api/CodeApi.models.ts).",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            }
        },
        {
            "name": "main",
            "path": "main.py",
            "documentation": {
                "sections": [
                    {
                        "content": "",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            }
        },
        {
            "name": "py_griffe",
            "path": "py_griffe.py",
            "documentation": {
                "sections": [
                    {
                        "content": "The python backend module to produce API files from python modules.",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            }
        },
        {
            "name": "std_links",
            "path": "std_links.py",
            "documentation": {
                "sections": [
                    {
                        "content": "",
                        "contentType": "Markdown",
                        "semantic": {
                            "role": "text",
                            "labels": [],
                            "attributes": {},
                            "relations": {}
                        },
                        "title": null
                    }
                ]
            }
        }
    ]
}